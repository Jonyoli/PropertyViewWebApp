@page "/listings/create"
@using PropertyViewWebApp.Shared.Models.Listings
@inject HttpClient http
@using PropertyViewWebApp.Shared.Models.TypeOfListing
@inject NavigationManager navigation

<h3>Create</h3>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

@if (Types == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="container">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </EditForm>
    </div>

    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="model.Name" />
    </div>

    <div class="form-group">
        <label>Content</label>
        <InputTextArea class="form-control" @bind-Value="model.Price" />
    </div>

    <div class="form-group">
        <label>Content</label>
        <InputTextArea class="form-control" @bind-Value="model.NumberOfBeds" />
    </div>

    <div class="form-group">
        <label>Content</label>
        <InputTextArea class="form-control" @bind-Value="model.NumberOfBaths" />
    </div>

    <div class="form-group">
        <label>Content</label>
        <InputTextArea class="form-control" @bind-Value="model.Squarefeet" />
    </div>
}
<button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>

<InputSelect class="form-control" @bind-Value="model.Id">
    @foreach (var type in Types)
    {
        <option value="@type.Id">@type.Name</option>
    }
</InputSelect>

@code {
    private ListingsCreate model = new();
    private IEnumerable<TypeOfListingGetAll> Types;
    private string errorMessage;

    private async void HandleSubmit()
    {
        var createListings = await http.PostAsJsonAsync<ListingsCreate>("/api/note", model);
        if (createListings.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/listings");
        }
        else
        {
            errorMessage = "Could not create listing right now. Please try again later.";
        }
    }
}
