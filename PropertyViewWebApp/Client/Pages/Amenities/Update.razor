@page "/amenities/update/{amenitiesId:int}"
@inject HttpClient http
@using PropertyViewWebApp.Shared.Models.Amenities
@inject NavigationManager navigation

@if (amenity != null)
{
    <h3>Update Amenities: @amenity.Name</h3>
}

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

<div class="container">
    <EditForm Model="@amenity" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="amenity.Name"></InputText>
            <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int amenitiesId { get; set; }
    private AmenitiesGetAll amenity { get; set; }
    //private IEnumerable<AmenitiesGetAll> amenities { get; set; }
    private string errorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        amenity = await http.GetFromJsonAsync<AmenitiesGetAll>($"/api/amenities/{amenitiesId}");
    }

    private async void HandleSubmit()
    {
        var updateAmenity = await http.PutAsJsonAsync<AmenitiesGetAll>($"/api/amenities/update/{amenitiesId}", amenity);
        if (updateAmenity.IsSuccessStatusCode)
        {
            navigation.NavigateTo($"/amenities");
        }
        else
        {
            errorMessage = "Could not update your amenity right now.  Please try again later.";
        }
    }
}